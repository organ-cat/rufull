<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat.rufull.domain.mapper.order.OrderMapper">

  <cache/>
  
  <resultMap id="ShopResult" type="com.cat.rufull.domain.model.Shop">
    <id column="shop_id" property="id"/>
    <result column="shop_name" property="shopName"/>
    <result column="shop_photo" property="shopPhoto"/>
    <result column="shop_phone" property="shopPhone"/>
  </resultMap>

  <resultMap id="AddressReuslt" type="com.cat.rufull.domain.model.Address">
    <id column="address_id" property="id"/>
    <result column="receiver" property="receiver"/>
    <result column="phone" property="phone"/>
    <result column="location" property="location"/>
    <result column="detail" property="detail"/>
    <result column="address_status" property="status"/>
    <result column="account_id" property="accountId"/>
  </resultMap>

  <resultMap id="OrderResult" type="com.cat.rufull.domain.model.Order">
    <id column="order_id" property="id"/>
    <result column="order_number" property="orderNumber"/>
    <result column="created_time" property="createdTime"/>
    <result column="completed_time" property="completedTime"/>
    <result column="accepted_time" property="acceptedTime"/>
    <result column="order_status" property="status"/>
    <result column="payment_method" property="paymentMethod"/>
    <result column="payment_status" property="paymentStatus"/>
    <result column="shipping_status" property="shippingStatus"/>
    <result column="notes" property="notes"/>
    <result column="total" property="total"/>
    <result column="account_id" property="accountId"/>
    <result column="business_id" property="businessId"/>

    <association property="shop" resultMap="ShopResult"/>
    <association property="address" resultMap="AddressReuslt"/>
    <collection property="lineItems" resultMap="com.cat.rufull.domain.mapper.lineItem.LineItemMapper.LineItemResult" />
  </resultMap>

  <select id="findOrdersByAccountId" parameterType="hashmap" resultMap="OrderResult">
    SELECT
      O.ID AS ORDER_ID,ACCOUNT_ID,CREATED_TIME,ACCEPTED_TIME,COMPLETED_TIME,
      ORDER_NUMBER,TOTAL,PAYMENT_METHOD,STATUS AS ORDER_STATUS,
      I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
      S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO
    FROM `ORDER` O
      LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
      LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
    WHERE O.ACCOUNT_ID=#{accountId}
    <choose>
      <when test="searchBy == 'unrated'">
        AND O.STATUS='COMPLETED'
      </when>
      <when test="searchBy == 'refund'">
        AND O.STATUS='UNCOMPLETED'
      </when>
      <otherwise>

      </otherwise>
    </choose>
    ORDER BY CREATED_TIME DESC
  </select>

  <select id="findOrderById" parameterType="int" resultMap="OrderResult">
    SELECT
      O.ID AS ORDER_ID,ORDER_NUMBER,CREATED_TIME,COMPLETED_TIME,
      ACCEPTED_TIME,O.STATUS AS ORDER_STATUS,PAYMENT_METHOD,PAYMENT_STATUS,
      SHIPPING_STATUS,NOTES,TOTAL,O.ACCOUNT_ID,O.SHOP_ID,O.BUSINESS_ID,O.ADDRESS_ID,
      I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
      S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO,SHOP_PHONE,
      A.ID AS ADDRESS_ID,RECEIVER,PHONE,LOCATION,DETAIL,A.STATUS AS ADDRESS_STATUS
    FROM `ORDER` O
      LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
      LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
      LEFT OUTER JOIN ADDRESS A ON O.ADDRESS_ID=A.ID
    WHERE O.ID=#{id}
  </select>

  <select id="findOrderByOrderNumber" parameterType="string" resultMap="OrderResult">
    SELECT
    O.ID AS ORDER_ID,ORDER_NUMBER,CREATED_TIME,COMPLETED_TIME,
    ACCEPTED_TIME,O.STATUS AS ORDER_STATUS,PAYMENT_METHOD,PAYMENT_STATUS,
    SHIPPING_STATUS,NOTES,TOTAL,O.ACCOUNT_ID,O.SHOP_ID,O.BUSINESS_ID,O.ADDRESS_ID,
    I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
    S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO,SHOP_PHONE,
    A.ID AS ADDRESS_ID,RECEIVER,PHONE,LOCATION,DETAIL,A.STATUS AS ADDRESS_STATUS
    FROM `ORDER` O
    LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
    LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
    LEFT OUTER JOIN ADDRESS A ON O.ADDRESS_ID=A.ID
    WHERE O.ORDER_NUMBER=#{orderNumber}
  </select>

  <update id="updateOrder" parameterType="com.cat.rufull.domain.model.Order">
    UPDATE `ORDER`
    SET
      CREATED_TIME=#{createdTime},
      COMPLETED_TIME=#{completedTime},
      ACCEPTED_TIME=#{acceptedTime},
      STATUS=#{status},
      PAYMENT_STATUS=#{paymentStatus},
      SHIPPING_STATUS=#{shippingStatus}
    WHERE ID=#{id}
  </update>

  <insert id="insertOrder" parameterType="com.cat.rufull.domain.model.Order"
          useGeneratedKeys="true" keyProperty="id">
    INSERT INTO `ORDER`(ORDER_NUMBER,CREATED_TIME,COMPLETED_TIME,ACCEPTED_TIME,
                        STATUS,PAYMENT_METHOD,PAYMENT_STATUS,SHIPPING_STATUS,
                        NOTES,TOTAL,ACCOUNT_ID,SHOP_ID,BUSINESS_ID,ADDRESS_ID)
    VALUES(#{orderNumber},#{createdTime},#{completedTime},#{acceptedTime},
           #{status},#{paymentMethod},#{paymentStatus},#{shippingStatus},
           #{notes},#{total},#{accountId},#{shop.id},#{businessId},#{address.id})
  </insert>

  <select id="findOrdersBetween" parameterType="hashmap" resultMap="OrderResult">
    SELECT
      O.ID AS ORDER_ID,ACCOUNT_ID,CREATED_TIME,ACCEPTED_TIME,COMPLETED_TIME,
      ORDER_NUMBER,TOTAL,PAYMENT_METHOD,STATUS AS ORDER_STATUS,
      I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
      S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO
    FROM `ORDER` O
      LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
      LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
    <where>
      <if test="beginDate != null">
        CREATED_TIME &gt;= #{beginDate}
      </if>
      <if test="endDate != null">
        AND CREATED_TIME &lt;= #{endDate}
      </if>
    </where>
  </select>

  <select id="findOrdersByAccountIdBetween" parameterType="hashmap" resultMap="OrderResult">
    SELECT
      O.ID AS ORDER_ID,ACCOUNT_ID,CREATED_TIME,ACCEPTED_TIME,COMPLETED_TIME,
      ORDER_NUMBER,TOTAL,PAYMENT_METHOD,STATUS AS ORDER_STATUS,
      I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
      S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO
    FROM `ORDER` O
      LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
      LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
    <where>
      <if test="accountId != null">
        ACCOUNT_ID &gt;= #{accountId}
      </if>
      <if test="beginDate != null">
        AND CREATED_TIME &gt;= #{beginDate}
      </if>
      <if test="endDate != null">
        AND CREATED_TIME &lt;= #{endDate}
      </if>
    </where>
  </select>

  <select id="findAllOrders" resultMap="OrderResult">
    SELECT
      O.ID AS ORDER_ID,ACCOUNT_ID,CREATED_TIME,ACCEPTED_TIME,COMPLETED_TIME,
      ORDER_NUMBER,TOTAL,PAYMENT_METHOD,STATUS AS ORDER_STATUS,
      I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
      S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO
    FROM `ORDER` O
      LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
      LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
    ORDER BY CREATED_TIME DESC
  </select>

  <select id="findShopOrdersByStatus" resultMap="OrderResult">
    SELECT
      O.ID AS ORDER_ID,ACCOUNT_ID,CREATED_TIME,ACCEPTED_TIME,COMPLETED_TIME,
      ORDER_NUMBER,TOTAL,PAYMENT_METHOD,STATUS AS ORDER_STATUS,
      I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
      S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO
    FROM `ORDER` O
      LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
      LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
    WHERE O.SHOP_ID = #{shopId} AND O.STATUS = #{orderStatus}
    ORDER BY CREATED_TIME DESC
  </select>

  <select id="findShopAcceptedOrders" resultMap="OrderResult">
    SELECT
    O.ID AS ORDER_ID,ACCOUNT_ID,CREATED_TIME,ACCEPTED_TIME,COMPLETED_TIME,
    ORDER_NUMBER,TOTAL,PAYMENT_METHOD,STATUS AS ORDER_STATUS,
    I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
    S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO
    FROM `ORDER` O
    LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
    LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
    WHERE O.SHOP_ID = #{shopId}
          AND (O.STATUS = 'ACCEPTED' OR O.STATUS = 'DELIVERY')
    ORDER BY CREATED_TIME DESC
  </select>

  <select id="findShopRefundOrders" resultMap="OrderResult">
    SELECT
      O.ID AS ORDER_ID,ACCOUNT_ID,CREATED_TIME,ACCEPTED_TIME,COMPLETED_TIME,
      ORDER_NUMBER,TOTAL,PAYMENT_METHOD,STATUS AS ORDER_STATUS,
      I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
      S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO
    FROM `ORDER` O
      LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
      LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
    WHERE O.SHOP_ID = #{shopId}
          AND (O.STATUS = 'AUDITING' OR O.STATUS = 'UNCOMPLETED')
    ORDER BY CREATED_TIME DESC
  </select>

  <select id="findShopCompletedOrders" resultMap="OrderResult">
    SELECT
      O.ID AS ORDER_ID,ACCOUNT_ID,CREATED_TIME,ACCEPTED_TIME,COMPLETED_TIME,
      ORDER_NUMBER,TOTAL,PAYMENT_METHOD,STATUS AS ORDER_STATUS,
      I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
      S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO
    FROM `ORDER` O
      LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
      LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
    WHERE O.SHOP_ID = #{shopId}
          AND (O.STATUS = 'COMPLETED' OR O.STATUS = 'EVALUATED')
    ORDER BY CREATED_TIME DESC
  </select>

  <select id="findBusinessOrdersByStatus" resultMap="OrderResult">
    SELECT
      O.ID AS ORDER_ID,ACCOUNT_ID,CREATED_TIME,ACCEPTED_TIME,COMPLETED_TIME,
      ORDER_NUMBER,TOTAL,PAYMENT_METHOD,STATUS AS ORDER_STATUS,
      I.ID AS ITEM_ID,PRODUCT_NAME,PRICE,QUANTITY,PRODUCT_ID,
      S.ID AS SHOP_ID,SHOP_NAME,SHOP_PHOTO
    FROM `ORDER` O
      LEFT OUTER JOIN LINE_ITEM I ON O.ID=I.ORDER_ID
      LEFT OUTER JOIN SHOP S ON O.SHOP_ID=S.ID
    WHERE O.BUSINESS_ID = #{businessId} AND O.STATUS = #{orderStatus}
    ORDER BY CREATED_TIME DESC
  </select>

  <select id="getMonthlySales" resultType="java.lang.Integer">
    SELECT COUNT(*)
    FROM `ORDER` O
    WHERE
      SHOP_ID = #{shopId}
      AND CREATED_TIME &gt;= #{today}
      AND CREATED_TIME &lt;= #{lastMonthToday}
      AND (STATUS = 'COMPLETED' OR STATUS = 'EVALUATED')
  </select>

  <select id="getMonthlyTotal" resultType="java.math.BigDecimal">
    SELECT SUM(TOTAL)
    FROM `ORDER` O
    WHERE
    SHOP_ID = #{shopId}
    AND CREATED_TIME &gt;= #{today}
    AND CREATED_TIME &lt;= #{lastMonthToday}
    AND (STATUS = 'COMPLETED' OR STATUS = 'EVALUATED')
  </select>
</mapper>