<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cat.rufull.domain.mapper.evaluation.EvaluationMapper">

    <resultMap id="Item" type="com.cat.rufull.domain.model.LineItem">
        <id column="id" property="id"/>
        <result column="product_name" property="productName"/>
        <result column="price" property="price"/>
        <result column="quantity" property="quantity"/>
        <result column="order_id" property="orderId"/>
        <result column="product_id" property="productId"/>
    </resultMap>
    
    <resultMap id="productEvalList" type="com.cat.rufull.domain.model.ProductEvaluation">
        <id column="productEvalId" property="id"/>
        <result column="productEvalScore" property="score"/>
        <result column="productEvalComment" property="comment"/>
        
        <association property="item" resultMap="Item"/>
    </resultMap>

    <resultMap id="EvaluationDetail" type="com.cat.rufull.domain.model.OrderEvaluation">
        <id column="id" property="id"/>
        <result column="score" property="score"/>
        <result column="comment" property="comment"/>
        <result column="reply" property="reply"/>
        <result column="eval_time" property="evalTime"/>
        <result column="shop_id" property="shopId"/>

        <collection property="productEvaluations" resultMap="productEvalList"/>

    </resultMap>

    <!-- 根据商店id查询全部评价 -->
    <select id="findEvalByShopId" parameterType="Integer" resultMap="EvaluationDetail">
        SELECT oe.* ,
        pe.id AS productEvalId,
        pe.score AS productEvalScore,
        pe.comment AS productEvalComment,
        li.*
        FROM order_evaluation oe, product_evaluation pe, line_item li
        WHERE shop_id = #{id}
        AND oe.order_id = pe.order_eval_id
	    AND pe.item_id = li.id
    </select>

    <!-- 根据商店id查询满意的评价 -->
    <select id="findEvalByShopId_Y" parameterType="Integer" resultMap="EvaluationDetail">
        SELECT oe.* ,
        pe.id AS productEvalId,
        pe.score AS productEvalScore,
        pe.comment AS productEvalComment,
        li.*
        FROM order_evaluation oe, product_evaluation pe, line_item li
        WHERE shop_id = #{id}
        AND oe.order_id = pe.order_eval_id
        AND pe.item_id = li.id
        AND oe.score &gt; 3
    </select>

    <!-- 根据商店id查询不满意的评价 -->
    <select id="findEvalByShopId_N" parameterType="Integer" resultMap="EvaluationDetail">
        SELECT oe.* ,
        pe.id AS productEvalId,
        pe.score AS productEvalScore,
        pe.comment AS productEvalComment,
        li.*
        FROM order_evaluation oe, product_evaluation pe, line_item li
        WHERE shop_id = #{id}
        AND oe.order_id = pe.order_eval_id
        AND pe.item_id = li.id
        AND oe.score &lt;4
    </select>

    <!-- 插入订单评价 -->
    <insert id="addOrderEval" parameterType="com.cat.rufull.domain.model.OrderEvaluation"
            useGeneratedKeys="true">
        <selectKey resultType="Integer" order="AFTER" keyProperty="id">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        INSERT INTO order_evaluation(score,comment,reply,eval_time,order_id,shop_id)
        VALUES(#{score},#{comment},#{reply},#{evalTime},#{order.id},#{shopId})
    </insert>

    <!-- 根据订单评价id插入商品评价评价 -->
    <insert id="addProductEval" parameterType="com.cat.rufull.domain.model.ProductEvaluation"
            useGeneratedKeys="true" keyProperty="id">
        INSERT INTO product_evaluation(score,comment,eval_time,item_id,order_eval_id)
        VALUES
        <foreach collection="list" item="pro" separator=",">
            (#{pro.score},#{pro.comment},#{pro.evalTime},#{pro.item.id},#{pro.orderEvalId})
        </foreach>

    </insert>
    
    <!-- 根据商店id查询评价平均分 -->
    <select id="findAvarageByShopId" parameterType="Integer" resultType="Double">
        SELECT AVG(score) FROM order_evaluation WHERE shop_id = #{shopId};
    </select>

    <!-- 根据商品id查询评价平均分 -->
    <select id="findAvarageByProductId" parameterType="Integer" resultType="Double">
        SELECT AVG(pe.score)
        FROM product_evaluation pe,line_item li, product pd
        WHERE pe.item_id = li.id
        AND   li.product_id = #{productId}
    </select>
</mapper>