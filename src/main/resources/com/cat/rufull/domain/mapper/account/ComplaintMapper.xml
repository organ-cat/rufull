<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cat.rufull.domain.mapper.account.ComplaintMapper">
    <insert id="addComplaint" keyProperty="id" parameterType="Complaint" useGeneratedKeys="true">
        INSERT
        INTO
        COMPLAINT
            (type,
            content,
            evidence,
            created_time,
            status,
            completed_time,
            result,
            solver,
            account_id,
            shop_id)
        VALUES
            (#{type},
            #{content},
            #{evidence},
            #{createdTime},
            #{status},
            #{completedTime},
            #{result},
            #{solver},
            #{account.id},
            #{shop.id})
    </insert>

    <select id="findComplaintById" parameterType="int" resultType="Complaint">
        SELECT
        *
        FROM
        COMPLAINT
        WHERE id = #{id};
    </select>



    <select id="findShopComplaintListById" parameterType="int" resultType="Complaint">
        SELECT
        *
        FROM
        COMPLAINT
        WHERE shop_id= #{shopId};
    </select>
    <select id="findAllComplaint" resultType="Complaint">
        SELECT
        *
        FROM
        COMPLAINT
        WHERE
        COMPLAINT.status != 3;
    </select>

    <update id="completedComplaint">
        UPDATE
        COMPLAINT
        SET
        COMPLAINT.result = #{result},
        COMPLAINT.solver = #{solver},
        COMPLAINT.status = #{status},
        COMPLAINT.completed_time = #{completedTime}
        WHERE
        id = #{id};
    </update>

    <update id="handlerComplaint">
        UPDATE
        COMPLAINT
        SET
        COMPLAINT.status = #{status}
        WHERE
        COMPLAINT.id = #{id};
    </update>
    <select id="completedComplaintList" resultType="Complaint">
        SELECT
        *
        FROM
        COMPLAINT
        WHERE
        COMPLAINT.status = 3;

    </select>

    <select id="findComplaintByTime" resultType="Complaint">
        SELECT *
        FROM
        COMPLAINT
        WHERE
        1 = 1
        AND
        COMPLAINT.status = 3
        <if test="creatTime != null">
            AND COMPLAINT.created_time &gt; #{creatTime}
        </if>
        <if test="completedTime != null">
            AND COMPLAINT.completed_time &lt; #{completedTime}
        </if>
        <if test="content !=null and content !=''">
            and COMPLAINT.content LIKE CONCAT(CONCAT('%',#{content}),'%')
        </if>
    </select>

    <resultMap id="AccountResult" type="com.cat.rufull.domain.model.Account">
        <id column="account_id" property="id"/>
    </resultMap>

    <resultMap id="ShopResult" type="com.cat.rufull.domain.model.Shop">
        <id column="shop_id" property="id"/>
        <result column="shop_name" property="shopName"/>
        <result column="shop_photo" property="shopPhoto"/>
    </resultMap>

    <resultMap id="ComplaintResult" type="com.cat.rufull.domain.model.Complaint">
        <id column="id" property="id"/>
        <result column="type" property="type"/>
        <result column="content" property="content"/>
        <result column="evidence" property="evidence"/>
        <result column="status" property="status"/>
        <result column="created_time" property="createdTime"/>
        <result column="completed_time" property="completedTime"/>
        <result column="result" property="result"/>
        <result column="solver" property="solver"/>
        <association property="account" resultMap="AccountResult"/>
        <association property="shop" resultMap="ShopResult"/>
    </resultMap>
    <select id="findAccountComplaintListById" parameterType="int" resultMap="ComplaintResult">
        SELECT
        *
        FROM
        COMPLAINT C
        LEFT OUTER JOIN ACCOUNT A ON A.id = C .account_id
        LEFT OUTER  JOIN SHOP S ON  S.id = C .shop_id
        WHERE account_id = #{account_id};
    </select>
</mapper>