<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:p="http://www.springframework.org/schema/p"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:aop="http://www.springframework.org/schema/aop"
             xmlns:websocket="http://www.springframework.org/schema/websocket"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/websocket
        http://www.springframework.org/schema/websocket/spring-websocket.xsd
        ">

    <!--启用@Contorller注解,同时启用Spring的类型转换,格式化,校验-->
    <annotation-driven validator="validator"/>

    <!--定义静态资源的映射位置-->
    <resources location="/, classpath:/META-INF/web-resources/" mapping="/resources/**"/>

    <!--视图解析器-->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <!--使DispatcherServlet既可以映射到根上下文,又可以拦截到静态资源的请求-->
    <default-servlet-handler/>

    <context:component-scan base-package="com.cat.rufull.app"/>

    <!--i18n支持并从MessageSource中获取信息-->
    <beans:bean class="org.springframework.context.support.ReloadableResourceBundleMessageSource"
                id="messageSource" p:basenames="WEB-INF/i18n/messages"
                p:fallbackToSystemLocale="false"/>

    <!--JSR-349支持的校验器-->
    <beans:bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
        <!--指示JSR-349校验器从messageSourceBean中根据code查找消息-->
        <beans:property name="validationMessageSource" ref="messageSource"/>
    </beans:bean>

    <!--文件上传支持-->
    <beans:bean class="org.springframework.web.multipart.support.StandardServletMultipartResolver"
                id="multipartResolver"/>

    <!--拦截器-->
    <interceptors>
        <interceptor>
            <mapping path="/account/*"/>
            <beans:bean class="com.cat.rufull.app.interceptor.account.LoginInterceptor"/>
        </interceptor>
        <interceptor>
            <mapping path="/address/*"/>
            <beans:bean class="com.cat.rufull.app.interceptor.account.LoginInterceptor"/>
        </interceptor>
        <interceptor>
            <mapping path="/complaint/*"/>
            <beans:bean class="com.cat.rufull.app.interceptor.account.LoginInterceptor"/>
        </interceptor>
        <interceptor>
            <mapping path="/order/**"/>
            <beans:bean class="com.cat.rufull.app.interceptor.account.LoginInterceptor"/>
        </interceptor>
        <interceptor>
            <mapping path="/cart/checkout"/>
            <beans:bean class="com.cat.rufull.app.interceptor.account.LoginInterceptor"/>
        </interceptor>
        <interceptor>
            <mapping path="/admin/*"/>
            <beans:bean class="com.cat.rufull.app.interceptor.account.AdminInterceptor"/>
        </interceptor>
        <interceptor>
            <mapping path="/manager/*"/>
            <beans:bean class="com.cat.rufull.app.interceptor.account.ManagerInterceptor"/>
        </interceptor>
    </interceptors>

    <!-- 购物车Map -->
    <beans:bean id="carts" class="com.cat.rufull.domain.model.Carts" scope="session">
        <aop:scoped-proxy/>
    </beans:bean>

    <websocket:message-broker
            application-destination-prefix="/app"
            user-destination-prefix="/user/">
        <websocket:stomp-endpoint path="/ws">
            <websocket:sockjs/>
        </websocket:stomp-endpoint>
        <websocket:simple-broker prefix="/topic, /user"/>
    </websocket:message-broker>
</beans:beans>
